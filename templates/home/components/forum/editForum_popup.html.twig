
<div class="forum_page" style="padding: 0;">
    <div class="add_pub_section edit_publication">
        <div class="top_entry">
            <div class="avatar">
			    <img src="{{ pub.user.image is not empty ? pub.user.image : asset('images/cours/person.jpg') }}" alt="User Avatar">
            </div>
            <div class="entry">
                
                <div class="content">
                    <textarea class="form-control" id="titre" placeholder="Titre" rows="1">{{ pub.titre }}</textarea>
                    <textarea class="form-control" id="contenu" placeholder="Poser votre question" rows="2">{{ pub.contenu }}</textarea>

                </div>
                {% if pub.images is not empty %}
                <div class="img_list">
                    {% for image in pub.images %}
                    <div class="single_img">
                        <img src="{{ image }}" alt="Image">
                        <button class="delete-btn" data-image="{{ image }}">Ã—</button>

                    </div>
                    {% endfor %}
                </div>
                {% endif %}

            </div>

        </div>
        <div class="btm_btns">
            <div class="single">

                <i class="fa-solid fa-paperclip"></i>


            </div>
            <div>
                <button id="updateButton" class="btn_main">Modifier</button>

            </div>

        </div>

    </div>
</div>

{% block javascripts %}
<script>
function handleDeleteButtonClick(event) {
    var imageUrl = event.target.dataset.image; 
    var publicationId = '{{ pub.id }}'; 

    fetch('/forum/delete-image/' + publicationId, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest',
        },
        body: JSON.stringify({ image: imageUrl }), 
    })
    .then(response => {
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        return response.json();
    })
    .then(data => {
        console.log(data);
        if (data.status === 'success') {
            event.target.parentNode.remove();
        } else {
            alert('Failed to delete image. Status is ' + data.status);
        }
    })
    .catch(error => {
        console.error('Error:', error);
    });
}

document.querySelectorAll('.delete-btn').forEach(function(button) {
    button.addEventListener('click', handleDeleteButtonClick);
})
var homeForumIndexUrl = '{{ path('home_forum_index') }}';
document.getElementById("updateButton").addEventListener("click", function() {
    var titre = document.getElementById("titre").value;
    var contenu = document.getElementById("contenu").value;
    var publicationId = '{{ pub.id }}';

    fetch('/forum/update-publication/' + publicationId, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json',
            'X-Requested-With': 'XMLHttpRequest',
        },
        body: JSON.stringify({ titre: titre, contenu: contenu }),
    })
        .then(response => {
            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }
            return response.json();
        })
        .then(data => {
            console.log(data);
            if (data.status === 'success') {
                window.location.href = homeForumIndexUrl;
            } else {
                alert('Failed to update publication. Status is ' + data.status);
            }
        })
        .catch((error) => {
            console.error('Error:', error);
        })
        .finally(() => {
            $('#generalModel').modal('hide');
        });
});
</script>




{% endblock %}

